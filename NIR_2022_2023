1) Парсер С на грамматиках с контекстами для детекции идиом

Идиомой называют исторически устойчивую имплеменцацию той или иной семантической единицы программы -- функции, процедуры, алгоритма и тд

С одной стороны, детектирование их в коде затруднительно, с другой стороны, интересным было бы разработать тул -- помощник для программиста, который бы детектировал идиомы из некоторого пула и делал по ним подсказки.
Например, программист пишет функцию f, но где - то в коде упротребляет g , при употреблении которой предпочтительнее использовать F, а не f.

Тогда можно написать такое правило, что в правой его части --  f <| g |> g , и если встретилось, то заменяем f на F (или делаем подсказку) 

Задание:

а) Читаем теорию. После вникания взять парсер грамматик с контекстами (Яворский, Виноградов, 2020-2021 по статье Бараша, Охотина).
б) Берем лексер (есть в репозитории Виноградова, надо проверить на работоспособность, на крайняк сделать свой), и сначала пробуем распарсить С бесконтекстно. Допиливаем связку лексер-парсер.
с) Начинаем придумывать контексные правила (сначала протестировать существующие для кейсов из диплома Виноградова).
д) Придумываем разные приложения
е) Ставим эксперименты по этим приложениям, по ходу дела доводя прототип изделия до нормального опенсорс-проекта.

2) Детектор потенциально векторизуемых циклов на основе КС-достижимости

3) Улучшение производительности статического анализатора Pathfinder
